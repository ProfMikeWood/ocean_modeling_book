Traceback (most recent call last):
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mike/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
print('Enter your WebDAV/Programmatic API credentials')
username = input('Enter your username: ')
password = input('Enter your password: ')

# check that all of the subdirectories are created
if version not in os.listdir(download_folder):
    os.mkdir(os.path.join(download_folder,version))
if release not in os.listdir(os.path.join(download_folder,version)):
    os.mkdir(os.path.join(download_folder,version,release))
if subset not in os.listdir(os.path.join(download_folder,version,release)):
    os.mkdir(os.path.join(download_folder,version,release,subset))
if var_name not in os.listdir(os.path.join(download_folder,version,release,subset)):
    os.mkdir(os.path.join(download_folder,version,release,subset,var_name))

# download all of the data
for i in range(len(file_urls)):
    url = file_urls[i]
    file_name = url.split('/')[-1]
    if file_name not in os.listdir(os.path.join(download_folder,version,release,subset,var_name)):
        print('Downloading '+file_name+' (file '+str(i+1)+' of '+str(len(file_urls))+')')
        output_file = os.path.join(download_folder,version,release,subset,var_name,file_name)
        with requests.get(url, stream=True, allow_redirects=True, auth=HTTPBasicAuth(username, password)) as r:
            r.raise_for_status()
            with open(output_file, 'wb') as f:                   
                for chunk in r.iter_content(chunk_size=8192):   
                    f.write(chunk)
------------------

----- stdout -----
Enter your WebDAV/Programmatic API credentials
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
Cell [0;32mIn[5], line 2[0m
[1;32m      1[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mEnter your WebDAV/Programmatic API credentials[39m[38;5;124m'[39m)
[0;32m----> 2[0m username [38;5;241m=[39m [38;5;28;43minput[39;49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mEnter your username: [39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      3[0m password [38;5;241m=[39m [38;5;28minput[39m([38;5;124m'[39m[38;5;124mEnter your password: [39m[38;5;124m'[39m)
[1;32m      5[0m [38;5;66;03m# check that all of the subdirectories are created[39;00m

File [0;32m~/opt/anaconda3/envs/teaching/lib/python3.11/site-packages/ipykernel/kernelbase.py:1190[0m, in [0;36mKernel.raw_input[0;34m(self, prompt)[0m
[1;32m   1188[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_allow_stdin:
[1;32m   1189[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mraw_input was called, but this frontend does not support input requests.[39m[38;5;124m"[39m
[0;32m-> 1190[0m     [38;5;28;01mraise[39;00m StdinNotImplementedError(msg)
[1;32m   1191[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_input_request(
[1;32m   1192[0m     [38;5;28mstr[39m(prompt),
[1;32m   1193[0m     [38;5;28mself[39m[38;5;241m.[39m_parent_ident[[38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m],
[1;32m   1194[0m     [38;5;28mself[39m[38;5;241m.[39mget_parent([38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m),
[1;32m   1195[0m     password[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m   1196[0m )

[0;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.

